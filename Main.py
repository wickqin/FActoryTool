# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
import subprocess


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(875, 675)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(180, 0, 381, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label.setIndent(-1)
        self.label.setObjectName("label")

        self.test_listView = QtWidgets.QListView(self.centralwidget)
        self.test_listView.setGeometry(QtCore.QRect(10, 90, 581, 461))
        self.test_listView.setObjectName("test_listView")

        self.test_progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.test_progressBar.setGeometry(QtCore.QRect(10, 590, 591, 23))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.test_progressBar.setFont(font)
        self.test_progressBar.setProperty("value", 0)
        self.test_progressBar.setObjectName("test_progressBar")

        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.operator_label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.operator_label.setFont(font)
        self.operator_label.setObjectName("operator_label")
        self.gridLayout.addWidget(self.operator_label, 2, 0, 1, 1)
        self.sn_label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.sn_label.setFont(font)
        self.sn_label.setObjectName("fx_label")
        self.gridLayout.addWidget(self.sn_label, 4, 0, 1, 1)
        self.product_label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.product_label.setFont(font)
        self.product_label.setObjectName("product_label")
        self.gridLayout.addWidget(self.product_label, 3, 0, 1, 1)
        self.pn_label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pn_label.setFont(font)
        self.pn_label.setObjectName("pn_label")
        self.gridLayout.addWidget(self.pn_label, 1, 0, 1, 1)

        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setGeometry(QtCore.QRect(610, 90, 241, 221))
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setAlignment(QtCore.Qt.AlignCenter)
        self.scrollArea.setObjectName("scrollArea")

        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 239, 200))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")

        self.scrollArea.setWidget(self.scrollAreaWidgetContents)

        self.textBrowser = QtWidgets.QTextBrowser(self.scrollAreaWidgetContents)
        self.textBrowser.setGeometry(QtCore.QRect(0, 0, 239, 200))
        self.textBrowser.setObjectName("textBrowser")

        self.runButton = QtWidgets.QPushButton(self.centralwidget)
        self.runButton.setGeometry(QtCore.QRect(650, 590, 75, 23))
        self.runButton.setObjectName("runButton")

        self.runAllButton = QtWidgets.QPushButton(self.centralwidget)
        self.runAllButton.setGeometry(QtCore.QRect(740, 590, 75, 23))
        self.runAllButton.setObjectName("runAllButton")

        MainWindow.setCentralWidget(self.centralwidget)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Additional setup
        self.test_commands = [
            {"name": "Scan SN", "command": "./settime.sh","result":True,"TestCont":0},
            {"name": "CPU Check", "command": "./cpu.sh"},
            {"name": "DIMM Check", "command": "./DDRchk.sh"},
            {"name": "BIOS Check", "command": "./bios.sh"},
            {"name": "Touchpad Test", "command": "./touchpad.sh"},
            {"name": "WIFI Test", "command": "./wifitest.sh"},
            {"name": "WIFI Test", "command": "./wifitest.sh"},
            {"name": "WIFI Test", "command": "./wifitest.sh"},
            {"name": "WIFI Test", "command": "./wifitest.sh"},
            {"name": "WIFI Test", "command": "./wifitest.sh"},
            {"name": "WIFI Test", "command": "./wifitest.sh"},
            {"name": "WIFI Test", "command": "./wifitest.sh"},
            {"name": "WIFI Test", "command": "./wifitest.sh"},
            {"name": "WIFI Test", "command": "./wifitest.sh"},
            {"name": "WIFI Test", "command": "./wifitest.sh"},
            {"name": "WIFI Test", "command": "./wifitest.sh"},
            {"name": "WIFI Test", "command": "./wifitest.sh"},
            {"name": "WIFI Test", "command": "./wifitest.sh"},
            {"name": "WIFI Test", "command": "./wifitest.sh"},
            {"name": "WIFI Test", "command": "./wifitest.sh"},
            {"name": "WIFI Test", "command": "./wifitest.sh"},
            {"name": "WIFI Test", "command": "./wifitest.sh"}
            # Add more tests here
        ]

        self.runButton.clicked.connect(self.run_selected_test)
        self.runAllButton.clicked.connect(self.start_all_tests)
        self.current_test_index = 0
        self.update_test_list()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Automated Test Runner"))
        self.runButton.setText(_translate("MainWindow", "Run"))
        self.runAllButton.setText(_translate("MainWindow", "Run All"))

    def update_test_list(self):
        model = QtGui.QStandardItemModel()
        for test in self.test_commands:
            item = QtGui.QStandardItem(test["name"])
            model.appendRow(item)
        self.test_listView.setModel(model)

    def log(self, message):
        self.textBrowser.append(message)

    def run_command(self, command):
        try:
            result = subprocess.run(command, shell=True, capture_output=True, text=True)
            if result.returncode == 0:
                self.log(f"{command} PASSED")
                return True
            else:
                self.log(f"{command} FAILED\n{result.stderr}")
                return False
        except Exception as e:
            self.log(f"Error running {command}: {e}")
            return False

    def run_test(self, test):
        self.log(f"Starting {test['name']}...")
        success = self.run_command(test['command'])
        self.log(f"{test['name']} {'PASSED' if success else 'FAILED'}")

    def start_all_tests(self):
        self.test_progressBar.setValue(0)
        self.current_test_index = 0
        self.run_next_test()

    def run_next_test(self):
        if self.current_test_index < len(self.test_commands):
            test = self.test_commands[self.current_test_index]
            self.run_test(test)
            self.current_test_index += 1
            progress = (self.current_test_index / len(self.test_commands)) * 100
            self.test_progressBar.setValue(progress)
            QtCore.QTimer.singleShot(100, self.run_next_test)  # Run the next test after 100 ms
        else:
            QtWidgets.QMessageBox.information(None, "Test Complete", "All tests are complete.")

    def run_selected_test(self):
        selected_indexes = self.test_listView.selectedIndexes()
        if selected_indexes:
            selected_index = selected_indexes[0].row()
            test = self.test_commands[selected_index]
            self.run_test(test)


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
